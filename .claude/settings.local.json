{
  "permissions": {
    "allow": [
      "Bash(chmod:*)",
      "Bash(uv:*)",
      "WebFetch(domain:textual.textualize.io)",
      "WebFetch(domain:github.com)",
      "WebFetch(domain:raw.githubusercontent.com)",
      "Bash(python:*)",
      "Bash(ls:*)",
      "Bash(./yesman.py ls)",
      "Bash(tmux list-sessions:*)",
      "Bash(timeout:*)",
      "Bash(rm:*)",
      "Bash(mkdir:*)",
      "Bash(pkill:*)",
      "Bash(timeout 5 python -m yesman dashboard 2>&1)",
      "Bash(timeout 5 python -m yesman dashboard:*)",
      "Bash(timeout 10 python -m:*)",
      "Bash(tmux list-panes:*)",
      "Bash(tmux capture-pane:*)",
      "Bash(find:*)",
      "Bash(grep:*)",
      "Bash(pip3:*)",
      "Bash(make:*)",
      "Bash(./yesman.py --help)",
      "Bash(./yesman.py:*)",
      "Bash(tmux new-session:*)",
      "Bash(tmux kill-session:*)",
      "Bash(true)",
      "Bash(../yesman.py setup test-integration)",
      "Bash(tmux list-windows:*)",
      "Bash(tmux send-keys:*)",
      "Bash(tmux ls:*)",
      "Bash(tmux new-window:*)",
      "Bash(touch:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(./yesman.py setup)",
      "Bash(./yesman.py dashboard)",
      "Bash(tmux display-message:*)",
      "Bash(kill:*)",
      "Bash(pip install:*)",
      "Bash(pnpm tauri:dev:*)",
      "Bash(pnpm install:*)",
      "Bash(cat:*)",
      "Bash(strace:*)",
      "Bash(pnpm run:*)",
      "Bash(wmctrl:*)",
      "Bash(xwininfo:*)",
      "Bash(DISPLAY=:0 pnpm tauri dev)",
      "Bash(echo $DISPLAY)",
      "Bash(git checkout:*)",
      "Bash(git push:*)",
      "Bash(cp:*)",
      "Bash(npm run build:*)",
      "WebFetch(domain:svelte.dev)",
      "Bash(mv:*)",
      "mcp__shrimp__process_thought",
      "Bash(/opt/homebrew/Caskroom/miniforge/base/bin/python --version)",
      "Bash(for file in tests/test_renderers.py tests/test_semantic_merger.py tests/test_conflict_prevention.py tests/unit/dashboard/renderers/test_base_renderer.py)",
      "Bash(do echo \"=== $file ===\")",
      "Bash(done)",
      "Bash(diff:*)",
      "mcp__filesystem__directory_tree",
      "mcp__filesystem__list_directory",
      "mcp__filesystem__read_file",
      "mcp__filesystem__search_files",
      "Bash(tree:*)",
      "mcp__filesystem__read_multiple_files",
      "mcp__filesystem__write_file",
      "mcp__sequential-thinking__sequentialthinking",
      "Bash(bandit:*)"
    ],
    "deny": []
  }
}