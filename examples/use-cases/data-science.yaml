# Data Science & ML Configuration
# Complete setup for data science and machine learning projects

session_name: "data-science-project"
description: "Data science and ML development environment"

# Workspace for data science project structure
workspace_config:
  base_dir: "~/projects/ml-project"

workspace_definitions:
  notebooks:
    rel_dir: "./notebooks"
    allowed_paths:
      - "."
      - "../data"
      - "../models"
      - "../src"
    description: "Jupyter notebooks workspace"
    
  data:
    rel_dir: "./data"
    allowed_paths: ["."]
    description: "Dataset storage workspace"
    
  models:
    rel_dir: "./models"
    allowed_paths: ["."]
    description: "ML models workspace"
    
  src:
    rel_dir: "./src"
    allowed_paths:
      - "."
      - "./preprocessing"
      - "./training" 
      - "./evaluation"
      - "./deployment"
    description: "Source code workspace"

# ML session settings

# ML environment setup
before_script: |
  echo "ðŸ§  Setting up ML environment..."
  
  # Create conda/virtual environment
  if [ -f "environment.yml" ]; then
    conda env update -f environment.yml || conda env create -f environment.yml
    conda activate ml-project
  elif [ -f "requirements.txt" ]; then
    pip install -r requirements.txt
  fi
  
  # Start services
  docker-compose up -d mlflow-server postgres || true
  
  # Create directories
  mkdir -p data/{raw,processed,external} models logs
  
  echo "âœ… ML environment ready!"

environment:
  PYTHONPATH: "./src"
  MLFLOW_TRACKING_URI: "http://localhost:5000"
  CUDA_VISIBLE_DEVICES: "0"  # GPU configuration
  WANDB_PROJECT: "ml-project"
  DATA_PATH: "./data"
  MODEL_PATH: "./models"

logging:
  level: "DEBUG"
  file: "~/.scripton/yesman/logs/ml-dev.log"
  format: "%(asctime)s [%(levelname)s] %(name)s: %(message)s"

# Custom settings for ML workflow
custom:
  project:
    type: "data-science"
    auto_backup: true
    backup_paths: ["./data/processed", "./models", "./notebooks"]
    
  integrations:
    wandb: true
    mlflow: true
    tensorboard: true
    
  performance:
    gpu_enabled: true
    memory_limit: "16GB"