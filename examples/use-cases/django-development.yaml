# Django Development Configuration
# Production-ready setup for Django web applications

session_name: "django-webapp"
description: "Django development with database and testing"

# Workspace configuration for Django project structure
workspace_config:
  base_dir: "~/projects/django-app"
  
  definitions:
    backend:
      path: "."
      allowed_paths:
        - "."
        - "./apps"
        - "./config"
        - "./tests"
        - "./static"
        - "./media"
        - "./templates"
      description: "Django backend workspace"
      
    frontend:
      path: "./frontend"
      allowed_paths:
        - "."
        - "./src"
        - "./static"
        - "./templates"
  
      description: "Frontend assets workspace"

sessions:
  django-dev:
    session_name: "django-dev"
    start_directory: "~/projects/django-app"
    description: "Main Django development session"
    
    # Django environment setup
    before_script: |
      echo "üêç Setting up Django environment..."
      
      # Activate virtual environment
      if [ -f "venv/bin/activate" ]; then
        source venv/bin/activate
      elif [ -f ".venv/bin/activate" ]; then
        source .venv/bin/activate
      fi
      
      # Install dependencies
      pip install -r requirements.txt || pip install -r requirements/dev.txt || true
      
      # Run migrations
      python manage.py migrate || true
      
      # Start services if available
      docker-compose -f docker-compose.dev.yml up -d postgres redis || true
      
      echo "‚úÖ Django environment ready!"
    
    environment:
      DJANGO_ENV: "development"
      DEBUG: "True"
      DATABASE_URL: "postgresql://localhost:5432/django_dev"
      REDIS_URL: "redis://localhost:6379/0"
      CELERY_BROKER_URL: "redis://localhost:6379/0"
    
    windows:
      # Main development server
      - window_name: "server"
        layout: "main-vertical"
        panes:
          - bash                           # Django shell access
          - python manage.py runserver     # Django development server
      
      # Background tasks and worker
      - window_name: "worker"
        layout: "even-horizontal"
        panes:
          - celery -A config worker --loglevel=info  # Celery worker
          - celery -A config beat --loglevel=info    # Celery scheduler
      
      # Database and monitoring
      - window_name: "database"
        layout: "even-horizontal"
        panes:
          - psql $DATABASE_URL              # Database shell
          - python manage.py shell_plus     # Django shell with models
      
      # Testing and quality
      - window_name: "testing"
        panes:
          - pytest --cov=apps --cov-report=html  # Run tests with coverage

logging:
  level: "INFO"
  file: "~/.scripton/yesman/logs/django-dev.log"
  format: "%(asctime)s [%(levelname)s] %(name)s: %(message)s"